<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:vector"
    WindowStartupLocation="CenterScreen"
    Style="{DynamicResource ModernStyle}"
    xmlns:Custom="http://modernwpf" x:Class="vector.LoginWindow"
    mc:Ignorable="d"
        Title="Login" Height="131" Width="385" ResizeMode="NoResize" Icon="Resources/icon1_XfI_icon.ico" Loaded="Window_Loaded" Closing="Window_Closing" KeyDown="Window_KeyDown"
   >
    <Window.Resources>
        <Storyboard x:Key="StoryboardError">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ErrorBlock">
                <EasingThicknessKeyFrame KeyTime="0" Value="0,8,0,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.16" Value="0,8,25,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.32" Value="25,8,0,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.48" Value="0,8,10,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.64" Value="10,8,0,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.8" Value="0,8,0,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:3" Value="0,8,0,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:3.16" Value="0,8,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="ModernStyle" TargetType="Window" >
            <Setter Property="Custom:Chrome.CaptionHeight" Value="20"/>
            <Setter Property="Custom:Chrome.Chrome">
                <Setter.Value>
                    <Custom:Chrome ActiveBorderBrush="#FF4E8FCD" InactiveBorderBrush="#BB888888"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="White"/>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF00A800"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF00A207"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">

                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF274D70"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF274D70"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border Padding="0,2,0,0" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderThickness="0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="0" Color="#FF569DE5"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MinMaxCloseRestore" TargetType="{x:Type Button}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Custom:Chrome.IsHitTestVisible" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3F8D8D8D"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#5FFFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border2" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border2" Color="#FF569DE5"/>
        <Style x:Key="PasswordBoxStyle1" TargetType="{x:Type PasswordBox}">
            <Setter Property="PasswordChar" Value="●"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderThickness="0,3,0,0" Margin="0,3,0,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="0" Color="#FF569DE5"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Background="#FF343434">
        <Image HorizontalAlignment="Left" VerticalAlignment="Top" Source="Resources/icon1_XfI_icon.ico" Margin="0.5,0.5,0,0" Width="32" Opacity="0.75">

        </Image>
        <TextBlock HorizontalAlignment="Left" Margin="30,40,0,0" TextWrapping="Wrap" Text="Логин:" VerticalAlignment="Top" Foreground="White"/>
        <TextBlock HorizontalAlignment="Left" Margin="22,77,0,0" TextWrapping="Wrap" Text="Пароль:" VerticalAlignment="Top" Foreground="White"/>
        <TextBox x:Name="TboxLogin" Margin="84,35,87,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="14" Style="{DynamicResource TextBoxStyle1}" BorderBrush="#FF2A2A2A" Background="#FF2A2A2A" Foreground="White" Height="26" PreviewKeyDown="TboxLogin_PreviewKeyDown" BorderThickness="1"/>
        <PasswordBox x:Name="TboxPswd" Margin="84,72,87,0" VerticalAlignment="Top" Height="26" Style="{DynamicResource PasswordBoxStyle1}" Background="#FF2A2A2A" BorderBrush="#FF2A2A2A" Foreground="White" PreviewKeyDown="TboxPswd_PreviewKeyDown" BorderThickness="1"/>
        <Button x:Name="BtnLogin" Margin="0,72,40,0" VerticalAlignment="Top" Height="26" Style="{DynamicResource ButtonStyle1}" BorderThickness="0" Background="#FF349334" Foreground="White" Click="BtnLogin_Click" HorizontalAlignment="Right" Width="47">
            <Path Fill="White" Data="M 41.8,13 28.9,0 19.5,0 29,9.4 0,9.4 0,16.5 29,16.5 19.5,25.9 28.9,25.9 41.8,13" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" Height="7" Width="10"/>
        </Button>
        <Button x:Name="ButtonClose" Width="34" VerticalAlignment="Top" Style="{DynamicResource MinMaxCloseRestore}" Margin="0" Height="26" HorizontalAlignment="Right" Foreground="{x:Null}" Click="ButtonCommonClick" Background="#00000000" BorderThickness="0" BorderBrush="{x:Null}">
            <Path Width="10" VerticalAlignment="Center" StrokeThickness="0" Stretch="Fill" Margin="0,2,0,0" Height="8" HorizontalAlignment="Center" Fill="White" Data="F1 M 57.000,2.000 L 60.000,5.000 L 63.000,2.000 L 65.000,2.000 L 61.000,6.000 L 65.000,10.000 L 63.000,10.000 L 60.000,7.000 L 57.000,10.000 L 55.000,10.000 L 59.000,6.000 L 55.000,2.000 L 57.000,2.000 Z"/>
        </Button>
        <TextBlock IsHitTestVisible="False" Foreground="Red" x:Name="ErrorBlock" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,8,0,0" FontSize="14" TextAlignment="Center"/>
        <Label x:Name="labelLang" Padding="18,6,0,0" Content="RU" Margin="0,35,40,0" VerticalAlignment="Top" Foreground="White" Background="#FF444343" HorizontalAlignment="Right" Height="26" FontSize="10" Width="47" BorderBrush="#FF274D70" BorderThickness="0"/>
        <Label x:Name="labelCaps" Padding="0" Margin="0,72,89,0" VerticalAlignment="Top" Foreground="White" Background="#7FFF5353" HorizontalAlignment="Right" Height="13" FontSize="9" Width="41" Content="Caps Lock" BorderThickness="0" BorderBrush="White"/>
    </Grid>
</Window>
